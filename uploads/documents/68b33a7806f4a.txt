To serve PHP pages without the .php extension, you can use URL rewriting with .htaccess in Apache. Here's how you can achieve this:

1. Using .htaccess File
Create or edit the .htaccess file in your website's root directory and add the following rules:
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^([^\.]+)$ $1.php [L]


Explanation:

RewriteEngine On: Enables the rewrite engine.
RewriteCond %{REQUEST_FILENAME} !-d: Ensures the requested URL is not a directory.
RewriteCond %{REQUEST_FILENAME} !-f: Ensures the requested URL is not a file.
RewriteRule ^([^\.]+)$ $1.php [L]: Redirects requests without an extension to the corresponding .php file.



For example:

Requesting example.com/about will serve example.com/about.php.


2. Configuring Apache Directly
If you have access to the Apache configuration file (e.g., httpd.conf), you can add similar rules:
<Directory "/var/www/html">
    RewriteEngine On
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^([^\.]+)$ $1.php [L]
</Directory>

Restart Apache after making changes:
sudo systemctl restart apache2


3. Alternative: Rename Files
You can also rename your PHP files without the .php extension and configure Apache to treat them as PHP files. Add this to your .htaccess or Apache configuration:
<FilesMatch "^[^.]+$">
    SetHandler application/x-httpd-php
</FilesMatch>

This will allow files without extensions to be processed as PHP.

These methods ensure a cleaner URL structure while still serving your PHP pages effectively. Always test your configuration to ensure it works as expected!
