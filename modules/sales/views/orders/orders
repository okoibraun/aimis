<?php
require_once '../../../../config/db.php';
require_once '../../includes/helpers.php';
include("../../../../functions/role_functions.php");

function handle_order_form_submission() {
    global $db;
    global $company_id;
    global $user_id;
    global $employee_id;

    $id = $_POST['id'] ?? null;
    $customer_id = $_POST['customer_id'];
    $order_date = $_POST['order_date'];
    $delivery_date = $_POST['delivery_date'] ?? null;
    $status = $_POST['status'];
    $notes = $_POST['notes'] ?? '';

    $tax_amount = $_POST['tax_amount'] ?? 0;
    $total_amount = $_POST['total_amount'] ?? 0;

    if ($id) {
        $update_order_stmt = $db->prepare("UPDATE sales_orders SET company_id=?, user_id=?, employee_id=?, customer_id=?, order_date=?, delivery_date=?, status=?, notes=?, tax_amount=?, total_amount=? WHERE id=?");
        $update_order = $update_order_stmt->execute([$company_id, $user_id, $employee_id, $customer_id, $order_date, $delivery_date, $status, $notes, $tax_amount, $total_amount, $id]);
        if($update_order) {
          $delete = $db->query("DELETE FROM sales_order_items WHERE order_id = $id");
          if($delete) {
            $order_id = $id;
            $item_product_ids = $_POST['product_id'];
            $item_quantities = $_POST['quantity'];
            $item_unit_prices = $_POST['unit_price'];
            $item_discounts = $_POST['discount_percent'];
            $item_sub_totals = $_POST['item_total'];
            $item_tax_rate = $_POST['item_tax'];
            foreach($item_product_ids as $key => $product_id) {
              $quantity = $item_quantities[$key];
              $unit_price = $item_unit_prices[$key];
              $discount = $item_discounts[$key];
              $total = $item_sub_totals[$key];
              $tax_rate = $item_tax_rate[$key];

              $db->query("INSERT INTO sales_order_items (company_id, user_id, employee_id, order_id, product_id, quantity, unit_price, discount_percent, total, tax_rate) VALUES ($company_id, $user_id, $employee_id, $order_id, $product_id, $quantity, $unit_price, $discount, $total, $tax_rate)");
            }
          }

        }
    } else {
        $order_number = generate_unique_order_number();
        $add_order = $db->query("INSERT INTO sales_orders (company_id, user_id, employee_id, order_number, customer_id, order_date, delivery_date, status, notes, tax_amount, total_amount) 
                    VALUES ($company_id, $user_id, $employee_id, '$order_number', '$customer_id', '$order_date', '$delivery_date', '$status', '$notes', '$tax_amount', '$total_amount')");
        
        if($add_order) {
          $order_id = $db->insert_id;
          $item_product_ids = $_POST['product_id'];
          $item_quantities = $_POST['quantity'];
          $item_unit_prices = $_POST['unit_price'];
          $item_discounts = $_POST['discount_percent'];
          $item_sub_totals = $_POST['item_total'];
          $item_tax_rate = $_POST['item_tax'];
          
          foreach($item_product_ids as $key => $product_id) {
            $quantity = $item_quantities[$key];
            $unit_price = $item_unit_prices[$key];
            $discount = $item_discounts[$key];
            $total = $item_sub_totals[$key];
              $tax_rate = $item_tax_rate[$key];

            $db->query("INSERT INTO sales_order_items (company_id, user_id, employee_id, order_id, product_id, quantity, unit_price, discount_percent, total, tax_rate) VALUES ($company_id, $user_id, $employee_id, $order_id, $product_id, $quantity, $unit_price, $discount, $total, $tax_rate)");
          }
        }
    }

    header("Location: orders?action=list");
    exit;
}

function delete_order($company_id, $id) {
    global $db;
    $db->query("DELETE FROM sales_order_items WHERE order_id = $id AND company_id = $company_id");
    $db->query("DELETE FROM sales_orders WHERE id = $id AND company_id = $company_id");

    header("Location: orders?action=list");
    exit;
}

function generate_unique_order_number() {
    return 'ORD-' . strtoupper(uniqid());
}

$action = $_GET['action'] ?? 'list';
$form_action = (isset($_GET['id']) && $_GET['id']) ? "form?id={$_GET['id']}" : 'form';

switch ($action) {
  case 'list':
    redirect('./');
    break;

  case 'form':
    redirect("{$form_action}");
    break;

  case 'save':
    handle_order_form_submission();
    break;

  case 'pdf':
    require_once '../../../../vendor/tecnickcom/tcpdf/tcpdf.php';

    $id = $_GET['id'] ?? null;
    if (!$id) exit('Missing ID');

    $order = $db->query("SELECT o.*, c.name AS customer_name, c.address, c.email, c.phone
        FROM sales_orders o
        JOIN sales_customers c ON o.customer_id = c.id
        WHERE o.id = $id")->fetch_assoc();

    if (!$order) exit("Order not found.");

    $items = $db->query("SELECT i.*, p.name AS product_name
        FROM sales_order_items i
        JOIN sales_products p ON i.product_id = p.id
        WHERE i.order_id = $id");

    $pdf = new TCPDF();
    $pdf->SetCreator('AIMIS');
    $pdf->SetTitle("Invoice #{$order['order_number']}");
    $pdf->AddPage();

    ob_start();
    include 'pdf_template.php'; // Include your PDF template file
    break;

  case 'sign':
    require_once '../../../../vendor/tecnickcom/tcpdf/tcpdf.php';

    $id = $_GET['id'] ?? null;
    if (!$id) exit('Missing ID');

    $order = $db->query("SELECT o.*, c.name AS customer_name, c.address, c.email, c.phone
        FROM sales_orders o
        JOIN sales_customers c ON o.customer_id = c.id
        WHERE o.id = $id")->fetch_assoc();

    if (!$order) exit("Order not found.");

    $items = $db->query("SELECT i.*, p.name AS product_name
        FROM sales_order_items i
        JOIN sales_products p ON i.product_id = p.id
        WHERE i.order_id = $id");

    $pdf = new TCPDF();
    $pdf->SetCreator('AIMIS');
    $pdf->SetTitle("Signed Invoice #{$order['order_number']}");
    $pdf->AddPage();

    ob_start();
    include 'pdf_sign_template.php'; // Include your PDF sign template file
    break;

  case 'request_signature':
    $id = $_GET['id'] ?? null;
    if (!$id) exit('Missing ID');

    $order = $db->query("SELECT * FROM sales_orders WHERE id = $id")->fetch_assoc();
    if (!$order) exit('Order not found.');

    // Simulate sending to external API
    $signatureRequestId = uniqid("sign_");

    // Store status
    $db->update('sales_orders', [
        'signature_status' => 'pending',
      // 'signature_file' => 'optional/file/path.pdf'
    ], 'id = ?', [$id]);

    echo "<p>Signature request sent. Awaiting webhook response.</p>";
    exit;
    break;

  case 'delete':
    delete_order($company_id, $_GET['id']);
    break;

  default:
    redirect('./');
}
